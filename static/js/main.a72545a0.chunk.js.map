{"version":3,"sources":["App.js","index.js"],"names":["App","props","getPreviousQuote","setState","selectedQuoteIndex","state","previousQuote","quotes","assignNewQuoteIndex","bind","selectQuoteIndex","generateNewQuoteIndex","fetch","then","data","json","this","length","Number","isInteger","random","prevState","className","selectedQuote","quote","author","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAqEeA,E,kDAhEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyCRC,iBAAmB,WACjB,EAAKC,SAAS,CACZC,mBAAoB,EAAKC,MAAMC,cAC/BA,cAAe,MA3CjB,EAAKD,MAAQ,CACXE,OAAQ,GACRH,mBAAoB,KACpBE,cAAe,IAEjB,EAAKE,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,iBAAmB,EAAKC,sBAAsBF,KAA3B,gBACxB,EAAKP,iBAAmB,EAAKA,iBAAiBO,KAAtB,gBATP,E,qDAYnB,WAAsB,IAAD,OACnBG,MAAM,yIACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAN,GAAM,OAAI,EAAKJ,SAAS,CAAEI,UAAU,EAAKC,0B,yBAGnD,WACE,GAAIQ,KAAKX,MAAME,OAAOU,QAAWC,OAAOC,UAAUH,KAAKX,MAAMD,oBAG7D,OAAOY,KAAKX,MAAME,OAAOS,KAAKX,MAAMD,sB,mCAGtC,WACE,GAAIY,KAAKX,MAAME,OAAOU,OAGtB,OAAOG,iBAAO,EAAGJ,KAAKX,MAAME,OAAOU,OAAS,K,iCAG9C,WAAuB,IAAD,OACpBD,KAAKb,UACH,SAAAkB,GACE,MAAO,CACLjB,mBAAoB,EAAKO,wBACzBL,cAAee,EAAUjB,yB,oBAajC,WACE,OACE,sBAAKkB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6BAAKN,KAAKO,cAAL,WAAyBP,KAAKO,cAAcC,MAA5C,KAAuD,KAC5D,sCAASR,KAAKO,cAAL,WAAyBP,KAAKO,cAAcE,OAA5C,KAAwD,GAAjE,UACE,uBACN,wBAAQH,UAAU,MAAMI,QAASV,KAAKR,oBAAtC,uBACA,wBAAQc,UAAU,MAAMI,QAASV,KAAKd,iBAAtC,mC,GA3DQyB,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a72545a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { random } from 'lodash';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null,\n      previousQuote: \"\"\n    }\n    this.assignNewQuoteIndex = this.assignNewQuoteIndex.bind(this);\n    this.selectQuoteIndex = this.generateNewQuoteIndex.bind(this);\n    this.getPreviousQuote = this.getPreviousQuote.bind(this);\n  }\n\n  componentDidMount () {\n    fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n      .then(data => data.json())\n      .then(quotes => this.setState({ quotes }, this.assignNewQuoteIndex));\n  }\n\n  get selectedQuote() {\n    if(!this.state.quotes.length || !Number.isInteger(this.state.selectedQuoteIndex)) {\n      return undefined;\n    }\n    return this.state.quotes[this.state.selectedQuoteIndex];\n  }\n\n  generateNewQuoteIndex() {\n    if(!this.state.quotes.length) {\n      return undefined;\n    }\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  assignNewQuoteIndex() {\n    this.setState(\n      prevState => {\n        return {\n          selectedQuoteIndex: this.generateNewQuoteIndex(),\n          previousQuote: prevState.selectedQuoteIndex\n        };\n      }); \n  }\n\n  getPreviousQuote = () => {\n    this.setState({\n      selectedQuoteIndex: this.state.previousQuote,\n      previousQuote: \"\"\n    });\n  }\n\n \n  render () {\n    return (\n      <div className=\"App\">\n          <div className=\"quote\">\n              <h2>{this.selectedQuote ? `\"${this.selectedQuote.quote}\"` : ''}</h2>\n              <small>-{this.selectedQuote ? `\"${this.selectedQuote.author}\"` : ''}-</small>\n          </div><br />\n          <button className=\"btn\" onClick={this.assignNewQuoteIndex}>New Quote</button>\n          <button className=\"btn\" onClick={this.getPreviousQuote}>Previous Quote</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}